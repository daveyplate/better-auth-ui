{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "organization-refetcher",
  "type": "registry:lib",
  "title": "Organization Refetcher",
  "description": "",
  "dependencies": [],
  "registryDependencies": [
    "https://better-auth-ui.com/r/auth-ui-provider.json",
    "https://better-auth-ui.com/r/use-current-organization.json"
  ],
  "files": [
    {
      "path": "src/lib/organization-refetcher.tsx",
      "content": "import { useContext, useEffect } from \"react\"\nimport { useCurrentOrganization } from \"../hooks/use-current-organization\"\nimport { AuthUIContext } from \"./auth-ui-provider\"\n\nexport const OrganizationRefetcher = () => {\n    const {\n        hooks: { useListOrganizations, useSession },\n        organization: organizationOptions,\n        navigate,\n        redirectTo\n    } = useContext(AuthUIContext)\n\n    const { slug, pathMode, personalPath } = organizationOptions || {}\n\n    const { data: sessionData } = useSession()\n\n    const {\n        data: organization,\n        isPending: organizationPending,\n        isRefetching: organizationRefetching,\n        refetch: refetchOrganization\n    } = useCurrentOrganization()\n\n    const { refetch: refetchListOrganizations } = useListOrganizations()\n\n    const { data: organizations } = useListOrganizations()\n\n    // biome-ignore lint/correctness/useExhaustiveDependencies: Refetch fix\n    useEffect(() => {\n        if (!sessionData?.user.id) return\n\n        if (organization || organizations) {\n            refetchOrganization?.()\n            refetchListOrganizations?.()\n        }\n    }, [sessionData?.user.id])\n\n    useEffect(() => {\n        if (organizationRefetching || organizationPending) return\n\n        if (slug && pathMode === \"slug\" && !organization) {\n            navigate(personalPath || redirectTo)\n        }\n    }, [\n        organization,\n        organizationRefetching,\n        organizationPending,\n        slug,\n        pathMode,\n        personalPath,\n        navigate,\n        redirectTo\n    ])\n\n    return null\n}\n",
      "type": "registry:lib"
    }
  ]
}