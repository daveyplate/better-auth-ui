{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "organization-logo",
  "type": "registry:component",
  "title": "Organization Logo",
  "description": "",
  "dependencies": [
    "better-auth",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://better-auth-ui.com/r/auth-localization.json",
    "https://better-auth-ui.com/r/auth-ui-provider.json",
    "avatar",
    "skeleton",
    "https://better-auth-ui.com/r/utils.json"
  ],
  "files": [
    {
      "path": "src/components/organization/organization-logo.tsx",
      "content": "\"use client\"\n\nimport type { Organization } from \"better-auth/plugins/organization\"\nimport { BuildingIcon } from \"lucide-react\"\nimport { type ComponentProps, useContext, useMemo } from \"react\"\n\nimport { AuthUIContext } from \"../../lib/auth-ui-provider\"\nimport { cn } from \"../../lib/utils\"\nimport type { AuthLocalization } from \"../../localization/auth-localization\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"../ui/avatar\"\nimport { Skeleton } from \"../ui/skeleton\"\n\nexport interface OrganizationLogoClassNames {\n    base?: string\n    image?: string\n    fallback?: string\n    fallbackIcon?: string\n    skeleton?: string\n}\n\nexport interface OrganizationLogoProps {\n    classNames?: OrganizationLogoClassNames\n    isPending?: boolean\n    size?: \"sm\" | \"default\" | \"lg\" | \"xl\" | null\n    organization?: Partial<Organization> | null\n    /**\n     * @default authLocalization\n     * @remarks `AuthLocalization`\n     */\n    localization?: AuthLocalization\n}\n\n/**\n * Displays an organization logo with image and fallback support\n *\n * Renders an organization's logo image when available, with appropriate fallbacks:\n * - Shows a skeleton when isPending is true\n * - Falls back to a building icon when no logo is available\n */\nexport function OrganizationLogo({\n    className,\n    classNames,\n    isPending,\n    size,\n    organization,\n    localization: propLocalization,\n    ...props\n}: OrganizationLogoProps & ComponentProps<typeof Avatar>) {\n    const { localization: contextLocalization, avatar } =\n        useContext(AuthUIContext)\n\n    const localization = useMemo(\n        () => ({ ...contextLocalization, ...propLocalization }),\n        [contextLocalization, propLocalization]\n    )\n\n    const name = organization?.name\n    const src = organization?.logo\n\n    if (isPending) {\n        return (\n            <Skeleton\n                className={cn(\n                    \"shrink-0 rounded-full\",\n                    size === \"sm\"\n                        ? \"size-6\"\n                        : size === \"lg\"\n                          ? \"size-10\"\n                          : size === \"xl\"\n                            ? \"size-12\"\n                            : \"size-8\",\n                    className,\n                    classNames?.base,\n                    classNames?.skeleton\n                )}\n            />\n        )\n    }\n\n    return (\n        <Avatar\n            className={cn(\n                \"bg-muted\",\n                size === \"sm\"\n                    ? \"size-6\"\n                    : size === \"lg\"\n                      ? \"size-10\"\n                      : size === \"xl\"\n                        ? \"size-12\"\n                        : \"size-8\",\n                className,\n                classNames?.base\n            )}\n            {...props}\n        >\n            {avatar?.Image ? (\n                <avatar.Image\n                    alt={name || localization?.ORGANIZATION!}\n                    className={classNames?.image}\n                    src={src || \"\"}\n                />\n            ) : (\n                <AvatarImage\n                    alt={name || localization?.ORGANIZATION!}\n                    className={classNames?.image}\n                    src={src || undefined}\n                />\n            )}\n\n            <AvatarFallback\n                className={cn(\"text-foreground\", classNames?.fallback)}\n                delayMs={src ? 600 : undefined}\n            >\n                <BuildingIcon\n                    className={cn(\"size-[50%]\", classNames?.fallbackIcon)}\n                />\n            </AvatarFallback>\n        </Avatar>\n    )\n}\n",
      "type": "registry:component"
    }
  ]
}