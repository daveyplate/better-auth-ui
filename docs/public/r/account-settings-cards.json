{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "account-settings-cards",
  "type": "registry:component",
  "title": "Account Settings Cards",
  "description": "",
  "dependencies": [],
  "registryDependencies": [
    "https://better-auth-ui.com/r/accounts-card.json",
    "https://better-auth-ui.com/r/auth-localization.json",
    "https://better-auth-ui.com/r/auth-ui-provider.json",
    "https://better-auth-ui.com/r/change-email-card.json",
    "https://better-auth-ui.com/r/settings-card.json",
    "https://better-auth-ui.com/r/update-avatar-card.json",
    "https://better-auth-ui.com/r/update-field-card.json",
    "https://better-auth-ui.com/r/update-name-card.json",
    "https://better-auth-ui.com/r/update-username-card.json",
    "https://better-auth-ui.com/r/utils.json"
  ],
  "files": [
    {
      "path": "src/components/settings/account-settings-cards.tsx",
      "content": "\"use client\"\n\nimport { useContext } from \"react\"\n\nimport { AuthUIContext } from \"../../lib/auth-ui-provider\"\nimport { cn } from \"../../lib/utils\"\nimport type { AuthLocalization } from \"../../localization/auth-localization\"\nimport { AccountsCard } from \"./account/accounts-card\"\nimport { UpdateAvatarCard } from \"./account/update-avatar-card\"\nimport { UpdateFieldCard } from \"./account/update-field-card\"\nimport { UpdateNameCard } from \"./account/update-name-card\"\nimport { UpdateUsernameCard } from \"./account/update-username-card\"\nimport { ChangeEmailCard } from \"./security/change-email-card\"\nimport type { SettingsCardClassNames } from \"./shared/settings-card\"\n\nexport function AccountSettingsCards({\n    className,\n    classNames,\n    localization\n}: {\n    className?: string\n    classNames?: {\n        card?: SettingsCardClassNames\n        cards?: string\n    }\n    localization?: Partial<AuthLocalization>\n}) {\n    const {\n        additionalFields,\n        avatar,\n        changeEmail,\n        credentials,\n        hooks: { useSession },\n        multiSession,\n        account: accountOptions\n    } = useContext(AuthUIContext)\n\n    const { data: sessionData } = useSession()\n\n    return (\n        <div\n            className={cn(\n                \"flex w-full flex-col gap-4 md:gap-6\",\n                className,\n                classNames?.cards\n            )}\n        >\n            {accountOptions?.fields?.includes(\"image\") && avatar && (\n                <UpdateAvatarCard\n                    classNames={classNames?.card}\n                    localization={localization}\n                />\n            )}\n\n            {credentials?.username && (\n                <UpdateUsernameCard\n                    classNames={classNames?.card}\n                    localization={localization}\n                />\n            )}\n\n            {accountOptions?.fields?.includes(\"name\") && (\n                <UpdateNameCard\n                    classNames={classNames?.card}\n                    localization={localization}\n                />\n            )}\n\n            {changeEmail && (\n                <ChangeEmailCard\n                    classNames={classNames?.card}\n                    localization={localization}\n                />\n            )}\n\n            {accountOptions?.fields?.map((field) => {\n                if (field === \"image\") return null\n                if (field === \"name\") return null\n                const additionalField = additionalFields?.[field]\n                if (!additionalField) return null\n\n                const {\n                    label,\n                    description,\n                    instructions,\n                    placeholder,\n                    required,\n                    type,\n                    multiline,\n                    validate\n                } = additionalField\n\n                // @ts-ignore Custom fields are not typed\n                const defaultValue = sessionData?.user[field] as unknown\n\n                return (\n                    <UpdateFieldCard\n                        key={field}\n                        classNames={classNames?.card}\n                        value={defaultValue}\n                        description={description}\n                        name={field}\n                        instructions={instructions}\n                        label={label}\n                        localization={localization}\n                        placeholder={placeholder}\n                        required={required}\n                        type={type}\n                        multiline={multiline}\n                        validate={validate}\n                    />\n                )\n            })}\n\n            {multiSession && (\n                <AccountsCard\n                    classNames={classNames?.card}\n                    localization={localization}\n                />\n            )}\n        </div>\n    )\n}\n",
      "type": "registry:component"
    }
  ]
}