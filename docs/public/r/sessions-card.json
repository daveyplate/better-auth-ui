{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sessions-card",
  "type": "registry:component",
  "title": "Sessions Card",
  "description": "",
  "dependencies": [],
  "registryDependencies": [
    "https://better-auth-ui.com/r/auth-localization.json",
    "https://better-auth-ui.com/r/auth-ui-provider.json",
    "card",
    "https://better-auth-ui.com/r/session-cell.json",
    "https://better-auth-ui.com/r/settings-card.json",
    "https://better-auth-ui.com/r/settings-cell-skeleton.json",
    "https://better-auth-ui.com/r/utils.json"
  ],
  "files": [
    {
      "path": "src/components/settings/security/sessions-card.tsx",
      "content": "\"use client\"\nimport { useContext } from \"react\"\n\nimport { AuthUIContext } from \"../../../lib/auth-ui-provider\"\nimport { cn } from \"../../../lib/utils\"\nimport type { AuthLocalization } from \"../../../localization/auth-localization\"\nimport { CardContent } from \"../../ui/card\"\nimport type { SettingsCardClassNames } from \"../shared/settings-card\"\nimport { SettingsCard } from \"../shared/settings-card\"\nimport { SettingsCellSkeleton } from \"../skeletons/settings-cell-skeleton\"\nimport { SessionCell } from \"./session-cell\"\n\nexport interface SessionsCardProps {\n    className?: string\n    classNames?: SettingsCardClassNames\n    localization?: Partial<AuthLocalization>\n}\n\nexport function SessionsCard({\n    className,\n    classNames,\n    localization\n}: SessionsCardProps) {\n    const {\n        hooks: { useListSessions },\n        localization: contextLocalization\n    } = useContext(AuthUIContext)\n\n    localization = { ...contextLocalization, ...localization }\n\n    const { data: sessions, isPending, refetch } = useListSessions()\n\n    return (\n        <SettingsCard\n            className={className}\n            classNames={classNames}\n            description={localization.SESSIONS_DESCRIPTION}\n            isPending={isPending}\n            title={localization.SESSIONS}\n        >\n            <CardContent className={cn(\"grid gap-4\", classNames?.content)}>\n                {isPending ? (\n                    <SettingsCellSkeleton classNames={classNames} />\n                ) : (\n                    sessions?.map((session) => (\n                        <SessionCell\n                            key={session.id}\n                            classNames={classNames}\n                            localization={localization}\n                            session={session}\n                            refetch={refetch}\n                        />\n                    ))\n                )}\n            </CardContent>\n        </SettingsCard>\n    )\n}\n",
      "type": "registry:component"
    }
  ]
}