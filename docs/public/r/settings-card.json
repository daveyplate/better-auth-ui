{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "settings-card",
  "type": "registry:component",
  "title": "Settings Card",
  "description": "",
  "dependencies": [],
  "registryDependencies": [
    "https://better-auth-ui.com/r/auth-localization.json",
    "card",
    "https://better-auth-ui.com/r/settings-card-footer.json",
    "https://better-auth-ui.com/r/settings-card-header.json",
    "https://better-auth-ui.com/r/user-avatar.json",
    "https://better-auth-ui.com/r/utils.json"
  ],
  "files": [
    {
      "path": "src/components/settings/shared/settings-card.tsx",
      "content": "\"use client\"\n\nimport type { ComponentProps, ReactNode } from \"react\"\n\nimport { cn } from \"../../../lib/utils\"\nimport type { AuthLocalization } from \"../../../localization/auth-localization\"\nimport { Card } from \"../../ui/card\"\nimport type { UserAvatarClassNames } from \"../../user-avatar\"\nimport { SettingsCardFooter } from \"./settings-card-footer\"\nimport { SettingsCardHeader } from \"./settings-card-header\"\n\nexport type SettingsCardClassNames = {\n    base?: string\n    avatar?: UserAvatarClassNames\n    button?: string\n    cell?: string\n    checkbox?: string\n    destructiveButton?: string\n    content?: string\n    description?: string\n    dialog?: {\n        content?: string\n        footer?: string\n        header?: string\n    }\n    error?: string\n    footer?: string\n    header?: string\n    icon?: string\n    input?: string\n    instructions?: string\n    label?: string\n    primaryButton?: string\n    secondaryButton?: string\n    outlineButton?: string\n    skeleton?: string\n    title?: string\n}\n\nexport interface SettingsCardProps\n    extends Omit<ComponentProps<typeof Card>, \"title\"> {\n    children?: ReactNode\n    className?: string\n    classNames?: SettingsCardClassNames\n    title?: ReactNode\n    description?: ReactNode\n    instructions?: ReactNode\n    actionLabel?: ReactNode\n    isSubmitting?: boolean\n    disabled?: boolean\n    isPending?: boolean\n    optimistic?: boolean\n    variant?: \"default\" | \"destructive\"\n    localization?: AuthLocalization\n    action?: () => Promise<unknown> | unknown\n}\n\nexport function SettingsCard({\n    children,\n    className,\n    classNames,\n    title,\n    description,\n    instructions,\n    actionLabel,\n    disabled,\n    isPending,\n    isSubmitting,\n    optimistic,\n    variant,\n    action,\n    ...props\n}: SettingsCardProps) {\n    return (\n        <Card\n            className={cn(\n                \"w-full pb-0 text-start\",\n                variant === \"destructive\" && \"border-destructive/40\",\n                className,\n                classNames?.base\n            )}\n            {...props}\n        >\n            <SettingsCardHeader\n                classNames={classNames}\n                description={description}\n                isPending={isPending}\n                title={title}\n            />\n\n            {children}\n\n            <SettingsCardFooter\n                classNames={classNames}\n                actionLabel={actionLabel}\n                disabled={disabled}\n                isPending={isPending}\n                isSubmitting={isSubmitting}\n                instructions={instructions}\n                optimistic={optimistic}\n                variant={variant}\n                action={action}\n            />\n        </Card>\n    )\n}\n",
      "type": "registry:component"
    }
  ]
}