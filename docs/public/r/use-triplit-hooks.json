{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-triplit-hooks",
  "type": "registry:lib",
  "title": "Use Triplit Hooks",
  "description": "",
  "dependencies": [
    "@triplit/client",
    "better-auth"
  ],
  "registryDependencies": [
    "https://better-auth-ui.com/r/auth-client.json",
    "https://better-auth-ui.com/r/auth-hooks.json",
    "https://better-auth-ui.com/r/refetch.json",
    "https://better-auth-ui.com/r/use-list-accounts.json",
    "https://better-auth-ui.com/r/use-list-sessions.json",
    "https://better-auth-ui.com/r/use-session.json"
  ],
  "files": [
    {
      "path": "src/lib/triplit/use-triplit-hooks.ts",
      "content": "import type { TriplitClient } from \"@triplit/client\"\nimport type { User } from \"better-auth\"\nimport { useMemo } from \"react\"\n\nimport type { Session } from \"../../types/auth-client\"\nimport type { AuthHooks } from \"../../types/auth-hooks\"\nimport type { Refetch } from \"../../types/refetch\"\nimport { useListAccounts } from \"./use-list-accounts\"\nimport { useListSessions } from \"./use-list-sessions\"\nimport { useSession } from \"./use-session\"\n\nconst namespaces = [\"user\", \"session\", \"account\", \"passkey\"] as const\ntype Namespace = (typeof namespaces)[number]\n\ntype ModelNames = {\n    [key in Namespace]: string\n}\n\nexport interface UseTriplitOptionsProps {\n    // biome-ignore lint/suspicious/noExplicitAny: ignore\n    triplit: TriplitClient<any>\n    modelNames?: Partial<ModelNames>\n    usePlural?: boolean\n    sessionData?: { user: User; session: Session } | null\n    refetch?: Refetch\n    isPending: boolean\n}\n\nexport function useTriplitHooks({\n    triplit,\n    usePlural = true,\n    modelNames,\n    sessionData,\n    isPending\n}: UseTriplitOptionsProps) {\n    const hooks = useMemo(() => {\n        return {\n            useSession: () =>\n                useSession({\n                    triplit,\n                    modelNames,\n                    usePlural,\n                    sessionData,\n                    isPending\n                }),\n            useListAccounts: () =>\n                useListAccounts({\n                    triplit,\n                    modelNames,\n                    usePlural,\n                    sessionData,\n                    isPending\n                }),\n            useListSessions: () =>\n                useListSessions({\n                    triplit,\n                    modelNames,\n                    usePlural,\n                    sessionData,\n                    isPending\n                })\n        } as AuthHooks\n    }, [triplit, modelNames, usePlural, sessionData, isPending])\n\n    return {\n        hooks\n    }\n}\n",
      "type": "registry:lib"
    }
  ]
}