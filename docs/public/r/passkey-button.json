{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "passkey-button",
  "type": "registry:component",
  "title": "Passkey Button",
  "description": "",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://better-auth-ui.com/r/auth-localization.json",
    "https://better-auth-ui.com/r/auth-ui-provider.json",
    "https://better-auth-ui.com/r/auth-view.json",
    "button",
    "https://better-auth-ui.com/r/use-success-transition.json",
    "https://better-auth-ui.com/r/utils.json"
  ],
  "files": [
    {
      "path": "src/components/auth/passkey-button.tsx",
      "content": "import { FingerprintIcon } from \"lucide-react\"\nimport { useContext } from \"react\"\n\nimport { useOnSuccessTransition } from \"../../hooks/use-success-transition\"\nimport { AuthUIContext } from \"../../lib/auth-ui-provider\"\nimport { cn, getLocalizedError } from \"../../lib/utils\"\nimport type { AuthLocalization } from \"../../localization/auth-localization\"\nimport { Button } from \"../ui/button\"\nimport type { AuthViewClassNames } from \"./auth-view\"\n\ninterface PasskeyButtonProps {\n    classNames?: AuthViewClassNames\n    isSubmitting?: boolean\n    localization: Partial<AuthLocalization>\n    redirectTo?: string\n    setIsSubmitting?: (isSubmitting: boolean) => void\n}\n\nexport function PasskeyButton({\n    classNames,\n    isSubmitting,\n    localization,\n    redirectTo,\n    setIsSubmitting\n}: PasskeyButtonProps) {\n    const {\n        authClient,\n        localization: contextLocalization,\n        toast\n    } = useContext(AuthUIContext)\n\n    localization = { ...contextLocalization, ...localization }\n\n    const { onSuccess } = useOnSuccessTransition({ redirectTo })\n\n    const signInPassKey = async () => {\n        setIsSubmitting?.(true)\n\n        try {\n            const response = await authClient.signIn.passkey({\n                fetchOptions: { throw: true }\n            })\n\n            if (response?.error) {\n                toast({\n                    variant: \"error\",\n                    message: getLocalizedError({\n                        error: response.error,\n                        localization\n                    })\n                })\n\n                setIsSubmitting?.(false)\n            } else {\n                onSuccess()\n            }\n        } catch (error) {\n            toast({\n                variant: \"error\",\n                message: getLocalizedError({ error, localization })\n            })\n\n            setIsSubmitting?.(false)\n        }\n    }\n\n    return (\n        <Button\n            className={cn(\n                \"w-full\",\n                classNames?.form?.button,\n                classNames?.form?.secondaryButton\n            )}\n            disabled={isSubmitting}\n            formNoValidate\n            name=\"passkey\"\n            value=\"true\"\n            variant=\"secondary\"\n            onClick={signInPassKey}\n        >\n            <FingerprintIcon />\n            {localization.SIGN_IN_WITH} {localization.PASSKEY}\n        </Button>\n    )\n}\n",
      "type": "registry:component"
    }
  ]
}